<?xml version="1.0" encoding="UTF-8"?>
<sequence name="service_chain_to_get_item_info_seq" trace="disable" xmlns="http://ws.apache.org/ns/synapse">
    <property name="REST_URL_POSTFIX" scope="axis2" action="remove"/>
    <property name="uri.var.itemId" scope="default" type="STRING" expression="json-eval($.order.id)"/>
    <property expression="json-eval($.order.itemsOrdered)" name="ItemsOrdered" scope="default" type="STRING"/>
    <log>
        <property name="uri.var.itemId1" expression="json-eval($.order.id)"/>
    </log>
    <call>
        <endpoint key="GetItemByItemId"/>
    </call>
    <property expression="json-eval($.departmentName)" name="uri.var.departmentName" scope="default" type="STRING"/>
    <property expression="json-eval($.sellerId)" name="sellerId" scope="default" type="STRING"/>
    <property expression="json-eval($.ID)" name="idValue" scope="default" type="STRING"/>
    <property expression="json-eval($.Title)" name="titleValue" scope="default" type="STRING"/>
    <property expression="json-eval($.Price)" name="priceValue" scope="default" type="STRING"/>
      <call blocking="true">
        <endpoint key="GetDepartmentByName"/>
    </call>
    <payloadFactory media-type="json">
      <format>
            {
                "id": "$1",
                "title": "$2",
                "price": "$3",
                "ItemsOrdered": "$4",
                "department": {
                    "name": "$5",
                    "location": "$6"
                }
            }
        </format>
      <args>
            <arg evaluator="xml" expression="$ctx:idValue"/>
            <arg evaluator="xml" expression="$ctx:titleValue"/>
            <arg evaluator="xml" expression="$ctx:priceValue"/>
            <arg evaluator="xml" expression="$ctx:ItemsOrdered"/>
            <arg evaluator="json" expression="$.departmentName"/>
            <arg evaluator="json" expression="$.location"/>
        </args>
    </payloadFactory>
    <property name="KAFKA_ENDPOINT" scope="default" type="STRING" expression="get-property('env', 'KAFKA_ENDPOINT')" action="set"/>
    <property name="KEY_PASS" scope="default" type="STRING" expression="get-property('env', 'KEY_PASS')" action="set"/>
    <property name="KEY_STORE_PATH" scope="default" type="STRING" expression="get-property('env', 'KEY_STORE_PATH')" action="set"/>
    <property name="KEY_STORE_PASS" scope="default" type="STRING" expression="get-property('env', 'KEY_STORE_PASS')" action="set"/>
    <property name="TRUST_STORE_PATH" scope="default" type="STRING" expression="get-property('env', 'TRUST_STORE_PATH')" action="set"/>
    <property name="TRUST_STORE_PASS" scope="default" type="STRING" expression="get-property('env', 'TRUST_STORE_PASS')" action="set"/>
    <log>
        <property name="KAFKA_ENDPOINT" expression="$ctx:KAFKA_ENDPOINT"/>
    </log>
    <log category="INFO" level="full"/>
    <kafkaTransport.publishMessages configKey="SecureChoreoKafkaConnection">
        <topic>purchased</topic>
        <partitionNo>0</partitionNo>
        <contentType></contentType>
        <key></key>
        <keySchema></keySchema>
        <keySchemaId></keySchemaId>
        <valueSchema></valueSchema>
        <valueSchemaId></valueSchemaId>
        <keySchemaSubject></keySchemaSubject>
        <keySchemaVersion></keySchemaVersion>
        <keySchemaSoftDeleted>false</keySchemaSoftDeleted>
        <valueSchemaSubject></valueSchemaSubject>
        <valueSchemaVersion></valueSchemaVersion>
        <valueSchemaSoftDeleted>false</valueSchemaSoftDeleted>
        <value></value>
    </kafkaTransport.publishMessages>
</sequence>